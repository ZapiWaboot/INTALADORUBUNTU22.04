#!/bin/bash

# reset shell colors
tput init

# https://stackoverflow.com/questions/59895/how-to-get-the-source-directory-of-a-bash-script-from-within-the-script-itself
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolva $SOURCE até que o arquivo não seja mais um link simbólico
  PROJECT_ROOT="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$PROJECT_ROOT/$SOURCE" # se $SOURCE for um link simbólico relativo, precisamos resolvê-lo em relação ao caminho onde o arquivo do link simbólico estava localizado
done
PROJECT_ROOT="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"

# importações necessárias
source "${PROJECT_ROOT}"/variables/manifest.sh
source "${PROJECT_ROOT}"/utils/manifest.sh
source "${PROJECT_ROOT}"/lib/manifest.sh

# arquivo de configurações do usuário
if [[ ! -e "${PROJECT_ROOT}"/config ]]; then
  cat << EOF > "${PROJECT_ROOT}"/config
deploy_password=${deploy_password}
mysql_root_password=${mysql_root_password}
db_pass=${db_pass}
EOF
fi

# este arquivo tem senhas
sudo su - root <<EOF
chown root:root "${PROJECT_ROOT}"/config
chmod 700 "${PROJECT_ROOT}"/config
EOF
source "${PROJECT_ROOT}"/config

# CLI interativa
inquiry_options

# dependências relacionadas
system_update
system_node_install
system_pm2_install
system_docker_install
system_puppeteer_dependencies
system_snapd_install
system_nginx_install
system_certbot_install

# configuração do sistema
system_create_user

# relacionado ao backend
system_git_clone
backend_set_env
backend_redis_create
backend_node_dependencies
backend_node_build
backend_db_migrate
backend_db_seed
backend_start_pm2
backend_nginx_setup

# relacionado ao frontend
frontend_set_env
frontend_node_dependencies
frontend_node_build
frontend_start_pm2
frontend_nginx_setup

# relacionado à rede
system_nginx_conf
system_nginx_restart
system_certbot_setup